/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}*,:after,:before{box-sizing:border-box}html{font-size:62.5%}.page{color:#9f9d9b;font:14px/1 Arial,sans-serif;background:#e4e4e2}ul{list-style:none;padding:0;margin:0}a{text-decoration:none;color:#000}h1,p{margin:0}button{border:none}figure{margin:0}.page__wrapper{overflow:hidden;width:100%;min-width:290px}.page__inner{max-width:1200px;margin:0 auto;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;padding:0 15px}.page__inner_main-item{-ms-flex-pack:center;justify-content:center;max-width:618px}.page__header{padding:6rem 0}.page__logo{margin:0 auto}.page__main{padding:65px 0 46px}.page__images{margin:0 0 30px}.page__main-image{margin:0 0 33px}.page__main-item{padding:75px 0;margin:0 0 65px}.page__main-article-picture{padding:48px 44px 63px 32px;margin:0 0 29px}.page__main-article-picture_second{margin:0}.page__main-articles{margin:0 0 29px}.page__article-header{margin:0 0 15px}.page__post-random{margin:0 0 25px}.page__nav-btn{margin:0 0 0 auto}.header{background:#f7f7f7}.icon{color:#a0a1a5}.icon:hover{color:#000}.social__icon{margin:0 32px 0 0;font-size:2rem}.social__icon_footer:hover{color:#fff}.nav-btn{position:relative;width:20px;height:20px;cursor:pointer}.nav-btn__line,.nav-btn__line:after,.nav-btn__line:before{content:"";position:absolute;height:4px;background:#000;top:50%;border-radius:2px;transition:all .3s ease;width:20px;margin-top:-2px}.nav-btn__line_white,.nav-btn__line_white:after,.nav-btn__line_white:before{background-color:#fff}.active .nav-btn__line_black{background:none}.nav-btn__line_black:after{margin:6px 0}.active .nav-btn__line_black:after{transform:rotate(45deg);margin:0}.nav-btn__line_black:before{margin-top:-10px}.active .nav-btn__line_black:before{transform:rotate(-45deg);margin:0}.white-active .nav-btn__line_white{background:none}.nav-btn__line_white:after{margin:6px 0}.white-active .nav-btn__line_white:after{transform:rotate(45deg);margin:0}.nav-btn__line_white:before{margin-top:-10px}.white-active .nav-btn__line_white:before{transform:rotate(-45deg);margin:0}.nav{background:linear-gradient(180deg,#f7f7f7,#dfdfdc);position:absolute;top:80px;width:100%;text-align:center;z-index:-10;transition:top .5s ease;left:0;box-shadow:0 -10px 40px -10px #454545}.nav__list{text-transform:uppercase;color:#000;font:700 18px/1 Yanone Kaffeesatz,sans-serif;margin:0;display:none}.active .nav__list{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:center;align-items:center}.nav__item{padding:2rem 4rem;display:block}.nav__item:hover{background:#d1cdcd}.active .nav{z-index:10;top:140px;transition:top .5s ease}.nav-white{background:#202020;position:absolute;bottom:90px;width:100%;text-align:center;z-index:-10;transition:bottom .5s ease;left:0;box-shadow:0 -10px 40px -10px #454545;padding:25px 0}.nav-white__list{text-transform:uppercase;color:#000;font:700 18px/1 Yanone Kaffeesatz,sans-serif;margin:0;display:none}.white-active .nav-white__list{display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;-ms-flex-align:center;align-items:center}.nav-white__item{padding:2rem 4rem;display:block}.nav-white__item:hover{background:#d1cdcd}.white-active .nav-white{z-index:10;bottom:135px;background:linear-gradient(0deg,#202020,#565656 36%,#a0a0a0 69%,#e3e3e1);transition:bottom .5s ease}.main-image{overflow:hidden;position:relative;-ms-flex-preferred-size:24%;flex-basis:24%}.main-image:hover .main-image__hover_likes{transition:all .3s ease;bottom:5px;height:25%}.main-image:hover .main-image__hover_date{transition:all .2s linear;top:5px;height:25%}.main-image__hover_date,.main-image__hover_likes{width:100%;display:-ms-flexbox;display:flex;position:absolute;padding:0 10px;-ms-flex-align:center;align-items:center;transition:all .2s ease;font-size:2rem}.main-image__hover_likes{background:#fff;bottom:-66px}.main-image__hover_date{background:hsla(0,0%,5%,.45);top:-71px;padding:0 15px;-ms-flex-pack:justify;justify-content:space-between;color:#fff;width:calc(100% - 10px);left:5px}.main-image__icon{margin:0 9px 0 0;color:#e6618c}.main-image__icon_enlarge{color:#000;margin:0 0 0 auto;cursor:pointer}.main-image__counter{margin:0 20px 0 0}.main-image__caption,.main-image__month{font-weight:700}.main-image__column{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.main-image__image{width:100%;border:5px solid #fff;height:100%}.main-item{background:#fff;text-align:center;color:#000;width:100%;letter-spacing:.9px;font:18px/30px Arial Narrow,Arial,sans-serif}.main-item__caption{margin:0 0 20px;letter-spacing:.8px}.main-item__paragraph{margin:0 0 42px}.content{-ms-flex-preferred-size:74%;flex-basis:74%}.btn{width:193px;background:#202020;font:18px/43px Yanone Kaffeesatz,sans-serif;color:#fff;text-transform:uppercase;border:none;letter-spacing:1.5px;cursor:pointer}.btn:after{border:4px dashed #fff}.btn_newsletter{-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center}.btn:hover{animation:a .6s ease;animation-iteration-count:1}.btn:hover:after{animation:spinAround 9s linear infinite}.main-article__inner{-ms-flex-align:start;align-items:flex-start}.article-header{display:-ms-flexbox;display:flex;font:14px/1 Arial,sans-serif}.article-header__name{margin:0 25px 0 0}.article-header__time{margin:0 0 0 auto}.caption{color:#000;font:700 28px/1 Yanone Kaffeesatz,sans-serif}.main-article-picture{background:#fff;display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.main-article-picture__caption{margin:0 0 21px;letter-spacing:.7px}.main-article-picture__figure{float:left}.main-article-picture__image{margin:0 30px 13px 0;width:233px;height:230px}.main-article-picture__first-paragraph{font:17px/24px Arial Narrow,Arial,sans-serif;color:#000;margin:-2px 0 25px;letter-spacing:.9px}.main-article-picture__second-paragraph{line-height:26px;color:#636060;letter-spacing:.2px}.main-article-picture__first-column{-ms-flex-preferred-size:83%;flex-basis:83%}.main-article-picture__second-column{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-item-align:start;align-self:flex-start;text-align:center;position:relative;-ms-flex-preferred-size:8%;flex-basis:8%;margin:35px 0 0}.main-article-picture__author{font:20px/1 Yanone Kaffeesatz,sans-serif;color:#000}.main-article-picture__name{font-size:12px;margin:0 0 15px;color:#e6618c}.main-article-picture__avatar{margin:0 0 37px;position:relative}.main-article-picture__avatar:hover .ava-hover{z-index:5;left:69px;transition:left .3s ease;visibility:visible}.main-article-picture__icon{margin:0 0 16px}.main-article-picture__figcaption{font-size:12px;padding:0 0 0 9px}.ava-hover{position:absolute;top:50%;transform:translateY(-50%);left:167px;z-index:-10;visibility:hidden}.ava-hover__triangle{border:10px solid transparent;border-right:10px solid hsla(0,0%,55%,.7);top:0;position:absolute;left:-20px}.ava-hover__rectangle{width:73px;height:20px;background:hsla(0,0%,55%,.7)}.ava-hover__social{position:absolute;top:50%;transform:translateY(-50%);left:9px}.ava-hover__icon{color:#fff;margin:0 3px;font-size:12px}.aside,.sidebar{-ms-flex-preferred-size:23%;flex-basis:23%}.sidebar{background:#fff;border:1px solid #d6d6d6;padding:45px 0 45px 39px;margin:0 0 28px}.sidebar__elem{position:relative;margin:0 20px 19px;cursor:pointer}.sidebar__elem:hover:before{left:-28px}.sidebar__elem_drop{margin:15px 0 -3px 1px}.sidebar__elem_drop:hover:before{border-left-color:#000}.sidebar__elem:before{border:5px solid transparent;border-left:5px solid #c2c2c2;content:"";position:absolute;top:2px;left:-18px;transition:all .3s ease}.sidebar__elem_dropped:before{border:5px solid transparent;border-top:5px solid #000;left:-23px;top:4px;transition:all .3s ease}.sidebar__elem_dropped .sidebar__drop{display:block;margin:0 0 -3px 2px}.sidebar__list{color:#000;margin:39px 0 0}.sidebar__link{color:#e6618c}.sidebar__link:hover{text-decoration:underline}.sidebar__drop{display:none}.sidebar__caption{text-align:center;font-size:17px;letter-spacing:1.5px;position:relative}.sidebar__caption:before{border:5px solid transparent;border-left:5px solid #c2c2c2;content:"";position:absolute;top:2px;left:41px;transition:all .3s ease;display:none}.sidebar__caption_first-active:before,.sidebar__caption_second-active:before{border:5px solid transparent;border-top:5px solid #000;left:36px;top:4px;transition:all .3s ease}.contacts{padding:0 0 82px}.contacts__inner{-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap;-ms-flex-align:start;align-items:flex-start}.contacts-form{background:#fff;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;padding:49px 37px 49px 33px;-ms-flex-preferred-size:49%;flex-basis:49%;margin:0 10px 0 0}.contacts-form__caption{margin:0 0 12px}.contacts-form__decription{margin:0 0 23px;color:#636060;line-height:25px}.contacts-form-field{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}.contacts-form-field__elem{padding:15px 30px;font-size:14px;margin:0 0 20px;background:#f2f2f2;border:1px solid #d6d6d6;width:53%}.contacts-form-field__elem::-webkit-input-placeholder{font-style:italic}.contacts-form-field__elem_text{resize:none;height:245px;width:100%}.contacts-form-field__elem_newsletter{width:100%;text-align:center}.contacts-form-field_newsletter{width:100%}.contacts__section{display:-ms-flexbox;display:flex;-ms-flex-preferred-size:49%;flex-basis:49%;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-wrap:wrap;flex-wrap:wrap}.post-random{background:#fff;-ms-flex-direction:column;flex-direction:column;padding:49px 33px;-ms-flex-preferred-size:48%;flex-basis:48%}.post-random__caption{margin:0 0 11px}.post-random__img{margin:0 0 15px;width:100%;height:auto}.post-random__description{font:20px/1 Yanone Kaffeesatz,sans-serif;color:#000}.newsletter{padding:52px 91px 49px;background:#fff;-ms-flex-preferred-size:100%;flex-basis:100%;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center}.newsletter__logo{margin:0 0 15px}.newsletter__caption{margin:0 0 26px}.image{border:5px solid #f0f0f0}.footer{background:#202020;padding:57px 0;position:relative}@media (max-width:1030px){.main-image__hover_date,.main-image__hover_likes{font-size:1.2rem}}@media (max-width:960px){.contacts-form{margin:0 0 10px}.contacts-form,.contacts__section{-ms-flex-preferred-size:100%;flex-basis:100%}.contacts__section{-ms-flex-wrap:nowrap;flex-wrap:nowrap}.post-random{margin:0 10px 0 0}}@media (max-width:900px){.ava-hover{display:none}}@media (max-width:870px){.content{-ms-flex-preferred-size:100%;flex-basis:100%}.aside{-ms-flex-order:-1;order:-1;display:-ms-flexbox;display:flex;-ms-flex-preferred-size:100%;flex-basis:100%;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:start;align-items:flex-start}.sidebar{-ms-flex-preferred-size:49%;flex-basis:49%}}@media (max-width:830px){.contacts__section{-ms-flex-wrap:wrap;flex-wrap:wrap}.post-random{margin:0 0 10px}}@media (max-width:750px){.main-image__hover_date,.main-image__hover_likes{font-size:2rem}.main-image{-ms-flex-preferred-size:49%;flex-basis:49%}}@media (max-width:680px){.main-article-picture{-ms-flex-wrap:wrap;flex-wrap:wrap;padding:3.3rem}.main-article-picture__figure{float:none;margin:0 0 10px}.main-article-picture__image{margin:0}.main-article-picture__first-column,.main-article-picture__second-column{-ms-flex-preferred-size:100%;flex-basis:100%}.main-article-picture__second-column{-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;background:#e7e7e7;padding:0 0 0 15px}.main-article-picture__author{display:none}.main-article-picture__avatar,.main-article-picture__name{margin:0}.main-article-picture__icon{margin:0;padding:15px;font-size:17px}}@media (max-width:650px){.social{display:none}.logo{margin:0 auto 0 0}.nav-white__item,.nav__item{padding:2rem}}@media (max-width:585px){.content{text-align:center}.article-header{-ms-flex-wrap:wrap;flex-wrap:wrap}.article-header__date,.article-header__name{-ms-flex-preferred-size:100%;flex-basis:100%;margin:0 0 10px}.article-header__time{margin:0;-ms-flex-preferred-size:100%;flex-basis:100%}.contacts-form,.main-article-picture{padding:1.3rem}}@media (max-width:515px){.main-image__hover_date,.main-image__hover_likes{font-size:1.2rem}}@media (max-width:500px){.btn_newsletter,.btn_submit{width:100%}.aside{-ms-flex-wrap:wrap;flex-wrap:wrap}.sidebar{-ms-flex-preferred-size:100%;flex-basis:100%}.sidebar__list{display:none}.sidebar__caption:before,.sidebar__list_active{display:block}.sidebar__caption{cursor:pointer}.contacts-form-field__elem{width:100%}.newsletter{padding:1.3em}}@media (max-width:430px){.post-random{-ms-flex-preferred-size:100%;flex-basis:100%}}@media (max-width:428px){.nav__list{-ms-flex-direction:column;flex-direction:column;-ms-flex-preferred-size:100%;flex-basis:100%;width:100%}.nav li{width:100%}.nav-white__list{-ms-flex-direction:column;flex-direction:column;-ms-flex-preferred-size:100%;flex-basis:100%;width:100%}.nav-white li{width:100%}}@media (max-width:400px){.nav-white__item,.nav__item{padding:1rem}}@media (max-width:360px){.main-article-picture__icon{padding:15px 10px}}@media (max-width:350px){.main-image__hover_date,.main-image__hover_likes{display:none}}@keyframes a{15%{transform:translateX(9px)}30%{transform:translateX(-9px)}40%{transform:translateX(6px)}50%{transform:translateX(-6px)}65%{transform:translateX(3px)}to{transform:translateX(0)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
